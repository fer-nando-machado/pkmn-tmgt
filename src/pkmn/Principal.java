package pkmn;

@SuppressWarnings("serial")
public class Principal extends javax.swing.JFrame {

    /** Creates new form Principal */
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        diversaoPanel.setVisible(false);
        resultadoPanel.setVisible(false);
        casaLabel.setVisible(false);
        emoticonLabel.setVisible(false);
        crapLabel.setVisible(false);
        pokemonLabel.setVisible(false);
        
        simuladorPanel.setVisible(false);
        statusPanel.setVisible(false);
        
        bgLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"start"+".jpg")));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aboutDialog = new javax.swing.JDialog();
        javax.swing.JPanel aboutPanel = new javax.swing.JPanel();
        javax.swing.JLabel projetoLabel = new javax.swing.JLabel();
        javax.swing.JLabel versaoLabel = new javax.swing.JLabel();
        javax.swing.JLabel curso1Label = new javax.swing.JLabel();
        javax.swing.JLabel nome1Label = new javax.swing.JLabel();
        javax.swing.JLabel curso2Label = new javax.swing.JLabel();
        javax.swing.JLabel nome2Label = new javax.swing.JLabel();
        javax.swing.JLabel nome3Label = new javax.swing.JLabel();
        javax.swing.JLabel curso3Label = new javax.swing.JLabel();
        javax.swing.JLabel materiaLabel = new javax.swing.JLabel();
        javax.swing.JLabel professorLabel = new javax.swing.JLabel();
        javax.swing.JLabel tamagoshiInfoLabel = new javax.swing.JLabel();
        javax.swing.JLabel pokemonInfoLabel = new javax.swing.JLabel();
        javax.swing.JLabel unifespLabel = new javax.swing.JLabel();
        javax.swing.JLabel ictLabel = new javax.swing.JLabel();
        javax.swing.JLabel aboutLabel = new javax.swing.JLabel();
        novoDialog = new javax.swing.JDialog();
        novoDialogPanel = new javax.swing.JPanel();
        nNomeField = new javax.swing.JTextField();
        nGrassLabel = new javax.swing.JLabel();
        nFireLabel = new javax.swing.JLabel();
        nWaterLabel = new javax.swing.JLabel();
        nIniciarButton = new javax.swing.JButton();
        nPokedexText = new javax.swing.JTextArea();
        nCriaturaLabel = new javax.swing.JLabel();
        javax.swing.JPanel nPanel = new javax.swing.JPanel();
        novoDialogLabel = new javax.swing.JLabel();
        simuladorPanel = new javax.swing.JPanel();
        crapLabel = new javax.swing.JLabel();
        casaLabel = new javax.swing.JLabel();
        emoticonLabel = new javax.swing.JLabel();
        pokemonLabel = new javax.swing.JLabel();
        resultadoPanel = new javax.swing.JPanel();
        p1Label = new javax.swing.JLabel();
        javax.swing.JLabel versusLabel = new javax.swing.JLabel();
        p2Label = new javax.swing.JLabel();
        diversaoPanel = new javax.swing.JPanel();
        rockLabel = new javax.swing.JLabel();
        paperLabel = new javax.swing.JLabel();
        scissorsLabel = new javax.swing.JLabel();
        controlePanel = new javax.swing.JPanel();
        javax.swing.JLabel fomeLabel = new javax.swing.JLabel();
        javax.swing.JLabel energiaLabel = new javax.swing.JLabel();
        javax.swing.JLabel higieneLabel = new javax.swing.JLabel();
        javax.swing.JLabel diversaoLabel = new javax.swing.JLabel();
        javax.swing.JLabel socialLabel = new javax.swing.JLabel();
        relogioLabel = new javax.swing.JLabel();
        statusPanel = new javax.swing.JPanel();
        fomeBar = new javax.swing.JProgressBar();
        diversaoBar = new javax.swing.JProgressBar();
        higieneBar = new javax.swing.JProgressBar();
        socialBar = new javax.swing.JProgressBar();
        banheiroBar = new javax.swing.JProgressBar();
        energiaBar = new javax.swing.JProgressBar();
        nomeLabel = new javax.swing.JLabel();
        logField = new javax.swing.JTextField();
        alturaLabel = new javax.swing.JLabel();
        pesoLabel = new javax.swing.JLabel();
        idadeLabel = new javax.swing.JLabel();
        elementoLabel = new javax.swing.JLabel();
        bgLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        jogoMenu = new javax.swing.JMenu();
        novoMenuItem = new javax.swing.JMenuItem();
        continuarMenuItem = new javax.swing.JMenuItem();
        separadorMenuBar = new javax.swing.JPopupMenu.Separator();
        sairMenuItem = new javax.swing.JMenuItem();
        ajudaMenu = new javax.swing.JMenu();
        sobreMenuItem = new javax.swing.JMenuItem();

        aboutDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        aboutDialog.setTitle("Sobre");
        aboutDialog.setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        aboutDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        aboutDialog.setIconImage(null);
        aboutDialog.setModal(true);
        aboutDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        aboutDialog.setName("Sobre"); // NOI18N
        aboutDialog.setResizable(false);
        aboutDialog.setUndecorated(true);
        aboutDialog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutDialogMouseClicked(evt);
            }
        });
        aboutDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        aboutPanel.setBackground(new java.awt.Color(255, 255, 255));
        aboutPanel.setOpaque(false);
        aboutPanel.setPreferredSize(new java.awt.Dimension(400, 450));
        aboutPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        projetoLabel.setFont(projetoLabel.getFont().deriveFont(projetoLabel.getFont().getStyle() | java.awt.Font.BOLD, projetoLabel.getFont().getSize()+6));
        projetoLabel.setText("Pokémon Tamagotchi");
        aboutPanel.add(projetoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        versaoLabel.setFont(versaoLabel.getFont().deriveFont(versaoLabel.getFont().getSize()-1f));
        versaoLabel.setText("Projeto de Conclusão da Disciplina");
        aboutPanel.add(versaoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        curso1Label.setFont(curso1Label.getFont());
        curso1Label.setText("Bacharelado em Ciência da Computação");
        aboutPanel.add(curso1Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 203, -1, -1));

        nome1Label.setFont(nome1Label.getFont().deriveFont(nome1Label.getFont().getStyle() | java.awt.Font.BOLD, nome1Label.getFont().getSize()+2));
        nome1Label.setText("Luiz Fernando Machado Silva");
        aboutPanel.add(nome1Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        curso2Label.setFont(curso2Label.getFont());
        curso2Label.setText("Bacharelado em Matemática Computacional");
        aboutPanel.add(curso2Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 233, -1, -1));

        nome2Label.setFont(nome2Label.getFont().deriveFont(nome2Label.getFont().getStyle() | java.awt.Font.BOLD, nome2Label.getFont().getSize()+2));
        nome2Label.setText("Matheus Antunes de Paulo");
        aboutPanel.add(nome2Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        nome3Label.setFont(nome3Label.getFont().deriveFont(nome3Label.getFont().getStyle() | java.awt.Font.BOLD, nome3Label.getFont().getSize()+2));
        nome3Label.setText("Matheus Micadei Marzo");
        aboutPanel.add(nome3Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        curso3Label.setFont(curso3Label.getFont());
        curso3Label.setText("Bacharelado em Matemática Computacional");
        aboutPanel.add(curso3Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 263, -1, -1));

        materiaLabel.setFont(materiaLabel.getFont().deriveFont(materiaLabel.getFont().getStyle() | java.awt.Font.BOLD, materiaLabel.getFont().getSize()+1));
        materiaLabel.setText("Programação Orientada à Objetos I");
        aboutPanel.add(materiaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, -1));

        professorLabel.setFont(professorLabel.getFont());
        professorLabel.setText("Professor: Fábio Fagundes Silveira");
        aboutPanel.add(professorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 302, -1, -1));

        tamagoshiInfoLabel.setFont(tamagoshiInfoLabel.getFont().deriveFont((tamagoshiInfoLabel.getFont().getStyle() | java.awt.Font.ITALIC), 9));
        tamagoshiInfoLabel.setText("TAMAGOTCHI é propriedade Bandai Co., Ltd.");
        aboutPanel.add(tamagoshiInfoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, -1, -1));

        pokemonInfoLabel.setFont(pokemonInfoLabel.getFont().deriveFont((pokemonInfoLabel.getFont().getStyle() | java.awt.Font.ITALIC), 9));
        pokemonInfoLabel.setText("POKÉMON é propriedade Nintendo Co., Ltd. / Game Freak, Inc.");
        aboutPanel.add(pokemonInfoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        unifespLabel.setFont(unifespLabel.getFont().deriveFont(unifespLabel.getFont().getStyle() | java.awt.Font.BOLD, unifespLabel.getFont().getSize()+3));
        unifespLabel.setText("Universidade Federal de São Paulo");
        aboutPanel.add(unifespLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        ictLabel.setFont(ictLabel.getFont().deriveFont(ictLabel.getFont().getSize()+1f));
        ictLabel.setText("Instituto de Ciência e Tecnologia");
        aboutPanel.add(ictLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 165, -1, -1));

        aboutDialog.getContentPane().add(aboutPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 450));

        aboutLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/about.jpg"))); // NOI18N
        aboutDialog.getContentPane().add(aboutLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 450));

        novoDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        novoDialog.setTitle("Novo jogo");
        novoDialog.setMinimumSize(new java.awt.Dimension(400, 225));
        novoDialog.setModal(true);
        novoDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        novoDialog.setName("Novo Jogo"); // NOI18N
        novoDialog.setUndecorated(true);
        novoDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        novoDialogPanel.setOpaque(false);
        novoDialogPanel.setPreferredSize(new java.awt.Dimension(400, 225));
        novoDialogPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nNomeField.setFont(nNomeField.getFont().deriveFont(nNomeField.getFont().getStyle() | java.awt.Font.BOLD, nNomeField.getFont().getSize()+9));
        nNomeField.setText("Ivysaur");
        nNomeField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        nNomeField.setPreferredSize(new java.awt.Dimension(260, 35));
        nNomeField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nNomeFieldKeyReleased(evt);
            }
        });
        novoDialogPanel.add(nNomeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 250, -1));

        nGrassLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nGrassLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/grass.png"))); // NOI18N
        nGrassLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nGrassLabel.setFocusable(false);
        nGrassLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nGrassLabelMouseClicked(evt);
            }
        });
        novoDialogPanel.add(nGrassLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 22, 30, 30));

        nFireLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nFireLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/fire.png"))); // NOI18N
        nFireLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nFireLabel.setEnabled(false);
        nFireLabel.setFocusable(false);
        nFireLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nFireLabelMouseClicked(evt);
            }
        });
        novoDialogPanel.add(nFireLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 22, 30, 30));

        nWaterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nWaterLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/water.png"))); // NOI18N
        nWaterLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nWaterLabel.setEnabled(false);
        nWaterLabel.setFocusable(false);
        nWaterLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nWaterLabelMouseClicked(evt);
            }
        });
        novoDialogPanel.add(nWaterLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 22, 30, 30));

        nIniciarButton.setFont(nIniciarButton.getFont().deriveFont(nIniciarButton.getFont().getStyle() | java.awt.Font.BOLD, 24));
        nIniciarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/pokeball.png"))); // NOI18N
        nIniciarButton.setText("INICIAR");
        nIniciarButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        nIniciarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nIniciarButton.setFocusable(false);
        nIniciarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nIniciarButtonActionPerformed(evt);
            }
        });
        novoDialogPanel.add(nIniciarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 165, 170, 40));

        nPokedexText.setEditable(false);
        nPokedexText.setFont(nPokedexText.getFont().deriveFont(nPokedexText.getFont().getSize()-1f));
        nPokedexText.setLineWrap(true);
        nPokedexText.setText("Seu bulbo o ajuda a absorver nutrientes, especialmente quando exposto a luz solar.\nFaz moradia em planícies e florestas.\n\nAltura: 1.0m\nPeso: 13.2kg");
        nPokedexText.setWrapStyleWord(true);
        nPokedexText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        nPokedexText.setPreferredSize(new java.awt.Dimension(260, 40));
        novoDialogPanel.add(nPokedexText, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 250, 100));

        nCriaturaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nCriaturaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/grass.gif"))); // NOI18N
        nCriaturaLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        nCriaturaLabel.setFocusable(false);
        novoDialogPanel.add(nCriaturaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 70, 70));

        nPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nPanel.setOpaque(false);

        javax.swing.GroupLayout nPanelLayout = new javax.swing.GroupLayout(nPanel);
        nPanel.setLayout(nPanelLayout);
        nPanelLayout.setHorizontalGroup(
            nPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );
        nPanelLayout.setVerticalGroup(
            nPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        novoDialogPanel.add(nPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 110, 40));

        novoDialog.getContentPane().add(novoDialogPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 400, 225));

        novoDialogLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/dialog.jpg"))); // NOI18N
        novoDialog.getContentPane().add(novoDialogLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 450));

        novoDialog.setSize(400,225);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Pokémon Tamagotchi");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"pokeball"+".png")).getImage());
        setName("framePrincipal"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        simuladorPanel.setOpaque(false);
        simuladorPanel.setPreferredSize(new java.awt.Dimension(400, 225));
        simuladorPanel.setLayout(null);

        crapLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/crap.gif"))); // NOI18N
        crapLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        crapLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crapLabelMouseClicked(evt);
            }
        });
        simuladorPanel.add(crapLabel);
        crapLabel.setBounds(243, 130, 18, 18);
        simuladorPanel.add(casaLabel);
        casaLabel.setBounds(320, 20, 80, 90);

        emoticonLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        emoticonLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        simuladorPanel.add(emoticonLabel);
        emoticonLabel.setBounds(340, 0, 55, 50);

        pokemonLabel.setForeground(new java.awt.Color(255, 255, 255));
        pokemonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pokemonLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        pokemonLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pokemonLabel.setFocusable(false);
        pokemonLabel.setRequestFocusEnabled(false);
        pokemonLabel.setVerifyInputWhenFocusTarget(false);
        pokemonLabel.setLocation(50, 50);
        pokemonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pokemonLabelMouseClicked(evt);
            }
        });
        simuladorPanel.add(pokemonLabel);
        pokemonLabel.setBounds(165, 80, 70, 70);

        resultadoPanel.setOpaque(false);
        resultadoPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 4, 5));

        p1Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/papel.png"))); // NOI18N
        resultadoPanel.add(p1Label);

        versusLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/versus.png"))); // NOI18N
        resultadoPanel.add(versusLabel);

        p2Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/papel.png"))); // NOI18N
        resultadoPanel.add(p2Label);

        simuladorPanel.add(resultadoPanel);
        resultadoPanel.setBounds(145, 150, 100, 40);

        diversaoPanel.setOpaque(false);
        diversaoPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 7, 5));

        rockLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rockLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/pedra.png"))); // NOI18N
        rockLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        rockLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rockLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rockLabelMouseClicked(evt);
            }
        });
        diversaoPanel.add(rockLabel);

        paperLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        paperLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/papel.png"))); // NOI18N
        paperLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        paperLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        paperLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paperLabelMouseClicked(evt);
            }
        });
        diversaoPanel.add(paperLabel);

        scissorsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scissorsLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/tesoura.png"))); // NOI18N
        scissorsLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        scissorsLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        scissorsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scissorsLabelMouseClicked(evt);
            }
        });
        diversaoPanel.add(scissorsLabel);

        simuladorPanel.add(diversaoPanel);
        diversaoPanel.setBounds(40, 135, 100, 35);

        controlePanel.setOpaque(false);
        controlePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 15));

        fomeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/fome.png"))); // NOI18N
        fomeLabel.setToolTipText("Comer");
        fomeLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fomeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fomeLabelMouseClicked(evt);
            }
        });
        controlePanel.add(fomeLabel);

        energiaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/energia.png"))); // NOI18N
        energiaLabel.setToolTipText("Dormir");
        energiaLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        energiaLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                energiaLabelMouseClicked(evt);
            }
        });
        controlePanel.add(energiaLabel);

        higieneLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/higiene.png"))); // NOI18N
        higieneLabel.setToolTipText("Banho");
        higieneLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        higieneLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                higieneLabelMouseClicked(evt);
            }
        });
        controlePanel.add(higieneLabel);

        diversaoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/diversao.png"))); // NOI18N
        diversaoLabel.setToolTipText("Jogar");
        diversaoLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        diversaoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                diversaoLabelMouseClicked(evt);
            }
        });
        controlePanel.add(diversaoLabel);

        socialLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/social.png"))); // NOI18N
        socialLabel.setToolTipText("Conversar");
        socialLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        socialLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                socialLabelMouseClicked(evt);
            }
        });
        controlePanel.add(socialLabel);

        simuladorPanel.add(controlePanel);
        controlePanel.setBounds(10, 10, 40, 210);

        relogioLabel.setFont(relogioLabel.getFont().deriveFont(relogioLabel.getFont().getStyle() | java.awt.Font.BOLD, relogioLabel.getFont().getSize()+9));
        relogioLabel.setForeground(new java.awt.Color(255, 255, 255));
        relogioLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        relogioLabel.setText("00:00:00");
        relogioLabel.setFocusable(false);
        simuladorPanel.add(relogioLabel);
        relogioLabel.setBounds(262, 185, 115, 25);

        getContentPane().add(simuladorPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 225));

        statusPanel.setOpaque(false);
        statusPanel.setPreferredSize(new java.awt.Dimension(400, 225));
        statusPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fomeBar.setForeground(new java.awt.Color(0, 51, 102));
        fomeBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        fomeBar.setFocusable(false);
        fomeBar.setName(""); // NOI18N
        fomeBar.setString("Fome");
        fomeBar.setStringPainted(true);
        statusPanel.add(fomeBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 170, 18));

        diversaoBar.setForeground(new java.awt.Color(0, 51, 102));
        diversaoBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        diversaoBar.setString("Diversão");
        diversaoBar.setStringPainted(true);
        statusPanel.add(diversaoBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 170, 18));

        higieneBar.setForeground(new java.awt.Color(0, 51, 102));
        higieneBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        higieneBar.setString("Higiene");
        higieneBar.setStringPainted(true);
        statusPanel.add(higieneBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 95, 170, 18));

        socialBar.setForeground(new java.awt.Color(0, 51, 102));
        socialBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        socialBar.setString("Social");
        socialBar.setStringPainted(true);
        statusPanel.add(socialBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 170, 18));

        banheiroBar.setForeground(new java.awt.Color(0, 51, 102));
        banheiroBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        banheiroBar.setString("Banheiro");
        banheiroBar.setStringPainted(true);
        statusPanel.add(banheiroBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 95, 170, 18));

        energiaBar.setForeground(new java.awt.Color(0, 51, 102));
        energiaBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        energiaBar.setString("Energia");
        energiaBar.setStringPainted(true);
        statusPanel.add(energiaBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 170, 18));

        nomeLabel.setFont(nomeLabel.getFont().deriveFont(nomeLabel.getFont().getStyle() & ~java.awt.Font.BOLD, nomeLabel.getFont().getSize()+7));
        nomeLabel.setText("Nome");
        statusPanel.add(nomeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 7, -1, -1));

        logField.setEditable(false);
        logField.setFont(logField.getFont().deriveFont(logField.getFont().getSize()+1f));
        logField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        statusPanel.add(logField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 145, 360, 20));

        alturaLabel.setText("Altura:");
        statusPanel.add(alturaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 28, -1, -1));

        pesoLabel.setText("Peso: ");
        statusPanel.add(pesoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, -1, -1));

        idadeLabel.setText("Idade: ");
        statusPanel.add(idadeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 52, -1, -1));

        elementoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/grassface.gif"))); // NOI18N
        statusPanel.add(elementoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, -2, 80, 80));

        getContentPane().add(statusPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 225, 400, 225));

        bgLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        bgLabel.setFocusable(false);
        bgLabel.setPreferredSize(new java.awt.Dimension(400, 450));
        getContentPane().add(bgLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 450));

        jogoMenu.setText("Jogo");
        jogoMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jogoMenuMouseEntered(evt);
            }
        });

        novoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        novoMenuItem.setText("Novo Jogo");
        novoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoMenuItemActionPerformed(evt);
            }
        });
        jogoMenu.add(novoMenuItem);

        continuarMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        continuarMenuItem.setText("Continuar");
        continuarMenuItem.setEnabled(false);
        continuarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuarMenuItemActionPerformed(evt);
            }
        });
        jogoMenu.add(continuarMenuItem);
        jogoMenu.add(separadorMenuBar);

        sairMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        sairMenuItem.setText("Sair");
        sairMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairMenuItemActionPerformed(evt);
            }
        });
        jogoMenu.add(sairMenuItem);

        menuBar.add(jogoMenu);

        ajudaMenu.setText("Ajuda");

        sobreMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        sobreMenuItem.setText("Sobre");
        sobreMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sobreMenuItemActionPerformed(evt);
            }
        });
        ajudaMenu.add(sobreMenuItem);

        menuBar.add(ajudaMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(simuladorPanel.isVisible()){
            pokemon.setUltimo(Relogio.getDataAtual());
            Fabrica.criarPokemonDAO().salvar(pokemon);              
        } 
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void pokemonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pokemonLabelMouseClicked
        exibirEmoticon("love");
        
        if(pokemon instanceof PokemonGrama)
            Som.tocar(getClass().getResource("/pkmn/source/grass.wav"));
        else if(pokemon instanceof PokemonFogo)
             Som.tocar(getClass().getResource("/pkmn/source/fire.wav"));
        else
             Som.tocar(getClass().getResource("/pkmn/source/water.wav"));
    }//GEN-LAST:event_pokemonLabelMouseClicked

    private void fomeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fomeLabelMouseClicked
        Som.tocar(getClass().getResource("/pkmn/source/fome.wav"));
        exibirEmoticon("ok");
        pokemon.setFome(pokemon.getFome()+10);
        escreverLog(pokemon.getNome() + " foi alimentado.");
    }//GEN-LAST:event_fomeLabelMouseClicked

    private void diversaoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_diversaoLabelMouseClicked
        diversaoPanel.setVisible(true);
    }//GEN-LAST:event_diversaoLabelMouseClicked

    private void rockLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rockLabelMouseClicked
        iniciarJokenpo(0,Jokenpo.gerarJogada());
    }//GEN-LAST:event_rockLabelMouseClicked

    private void paperLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paperLabelMouseClicked
        iniciarJokenpo(1,Jokenpo.gerarJogada());
    }//GEN-LAST:event_paperLabelMouseClicked

    private void scissorsLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scissorsLabelMouseClicked
        iniciarJokenpo(2,Jokenpo.gerarJogada());
    }//GEN-LAST:event_scissorsLabelMouseClicked

    private void sobreMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sobreMenuItemActionPerformed
        aboutDialog.setLocation(bgLabel.getLocationOnScreen());
        aboutDialog.setSize(aboutDialog.getPreferredSize());
        aboutDialog.setVisible(true);
    }//GEN-LAST:event_sobreMenuItemActionPerformed

    private void sairMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairMenuItemActionPerformed
        formWindowClosing(null);
    }//GEN-LAST:event_sairMenuItemActionPerformed

    private void aboutDialogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutDialogMouseClicked
        aboutDialog.dispose();
    }//GEN-LAST:event_aboutDialogMouseClicked

    private void energiaLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_energiaLabelMouseClicked
        exibirCasa(1);
    }//GEN-LAST:event_energiaLabelMouseClicked

    private void socialLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_socialLabelMouseClicked
        pokemon.setSocial(pokemon.getSocial()+10);
        exibirConversa();
    }//GEN-LAST:event_socialLabelMouseClicked

    private void higieneLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_higieneLabelMouseClicked
        exibirCasa(2);
    }//GEN-LAST:event_higieneLabelMouseClicked

    private void crapLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crapLabelMouseClicked
        pokemon.setStatus(0);
        crapLabel.setVisible(false);
        Som.tocar(getClass().getResource("/pkmn/source/clean.wav"));
    }//GEN-LAST:event_crapLabelMouseClicked

    private void novoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoMenuItemActionPerformed
        novoDialog.setLocation(bgLabel.getLocationOnScreen());
        novoDialog.setSize(novoDialog.getPreferredSize());
        novoDialog.setVisible(true);
    }//GEN-LAST:event_novoMenuItemActionPerformed

    private void continuarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continuarMenuItemActionPerformed
        pokemon = Fabrica.criarPokemonDAO().carregar(); 
        
        if((pokemon != null)&&(pokemon.ultimo < Relogio.getDataAtual())){
            pokemon.simular(Relogio.getDiferencaSegundos(Relogio.getDataAtual(), pokemon.ultimo), velocidade);
            
            if(pokemon.getCasa() == 1)
                pokemon.setEnergia(pokemon.getEnergia() + (Relogio.getDiferencaSegundos(Relogio.getDataAtual(), pokemon.ultimo)*0.0005*velocidade));
            else if(pokemon.getCasa() == 2)
                pokemon.setHigiene(pokemon.getHigiene() + (Relogio.getDiferencaSegundos(Relogio.getDataAtual(), pokemon.ultimo)*0.001*velocidade));


            pokemon.setUltimo(Relogio.getDataAtual());
            Fabrica.criarPokemonDAO().salvar(pokemon);

            Som.tocar(getClass().getResource("/pkmn/source/start.wav"));

            if(pokemon instanceof PokemonGrama){
                pokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"grass"+".gif")));
                bgLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"grass"+".jpg")));
                elementoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"grassface"+".gif")));
            }
            else if(pokemon instanceof PokemonFogo){
                pokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"fire"+".gif")));  
                bgLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"fire"+".jpg")));
                elementoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"fireface"+".gif")));
            }
            else if(pokemon instanceof PokemonAgua){
                pokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"water"+".gif")));      
                bgLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"water"+".jpg")));
                elementoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"waterface"+".gif")));
            }
            
            nomeLabel.setText(pokemon.getNome());
            pesoLabel.setText("Peso: "+pokemon.getPeso()+"kg");
            alturaLabel.setText("Altura: "+pokemon.getAltura()+"m");
            idadeLabel.setText("Idade: "+Relogio.getDiferencaDias(Relogio.getDataAtual(), pokemon.getNascimento())+" dias");

            if(pokemon.getStatus() == 1) crapLabel.setVisible(true);
            if(pokemon.getCasa() != 0){
                casaLabel.setLocation(pokemonLabel.getX(), pokemonLabel.getY());
                casaLabel.setVisible(true);
                exibirCasa(pokemon.getCasa());
            }
                        
            logField.setText("");
            pokemonLabel.setVisible(true);
            simuladorPanel.setVisible(true);
            statusPanel.setVisible(true);
            elementoLabel.setVisible(true);
            iniciarSimulacao();
        }
        else{
            Som.tocar(getClass().getResource("/pkmn/source/falha.wav"));
            Fabrica.criarPokemonDAO().limpar();
        }

    }//GEN-LAST:event_continuarMenuItemActionPerformed

    private void nGrassLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nGrassLabelMouseClicked
        nGrassLabel.setEnabled(true);
        nFireLabel.setEnabled(false);
        nWaterLabel.setEnabled(false);
        nNomeField.setText("Ivysaur");
        nPokedexText.setText("Seu bulbo o ajuda a absorver nutrientes, especialmente quando exposto a luz solar.\nFaz moradia em planícies e florestas.\n\nAltura: 1.0m\nPeso: 13.2kg");
        nCriaturaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/grass.gif")));
        Som.tocar(getClass().getResource("/pkmn/source/grass.wav"));
        nNomeFieldKeyReleased(null);
    }//GEN-LAST:event_nGrassLabelMouseClicked

    private void nFireLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nFireLabelMouseClicked
        nGrassLabel.setEnabled(false);
        nFireLabel.setEnabled(true);
        nWaterLabel.setEnabled(false);
        nNomeField.setText("Charmeleon");
        nPokedexText.setText("Durante a noite, sua calda brilha tão forte quanto as estrelas. Feroz por natureza.\nHabita montanhas e vulcões inativos.\n\nAltura: 1.2m\nPeso: 19.3kg");
        nCriaturaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/fire.gif")));
        Som.tocar(getClass().getResource("/pkmn/source/fire.wav"));
        nNomeFieldKeyReleased(null);
    }//GEN-LAST:event_nFireLabelMouseClicked

    private void nWaterLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nWaterLabelMouseClicked
        nGrassLabel.setEnabled(false);
        nFireLabel.setEnabled(false);
        nWaterLabel.setEnabled(true);
        nNomeField.setText("Wartortle");
        nPokedexText.setText("Sua calda é um símbolo de longevidade e suas orelhas lhe proporcionam equilíbrio.\nVive nas próximidades de oceanos.\n\nAltura: 1.1m\nPeso: 22.5kg");
        nCriaturaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/water.gif")));
        Som.tocar(getClass().getResource("/pkmn/source/water.wav"));
        nNomeFieldKeyReleased(null);
    }//GEN-LAST:event_nWaterLabelMouseClicked

    private void nIniciarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nIniciarButtonActionPerformed
        if((nNomeField.getText().compareTo("") != 0)&&((nGrassLabel.isEnabled())||(nFireLabel.isEnabled())||(nWaterLabel.isEnabled()))&&(nNomeField.getText().length() <= 10)){

            if(nGrassLabel.isEnabled()){
                pokemon = new PokemonGrama(nNomeField.getText(),1,13.2);
                pokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"grass"+".gif")));
                bgLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"grass"+".jpg")));
                elementoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"grassface"+".gif")));
            }
            else if(nFireLabel.isEnabled()){
                pokemon = new PokemonFogo(nNomeField.getText(),1.2,19.3);
                pokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"fire"+".gif")));  
                bgLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"fire"+".jpg")));
                elementoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"fireface"+".gif")));
            }
            else{
                pokemon = new PokemonAgua(nNomeField.getText(),1.1,22.5);
                pokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"water"+".gif")));      
                bgLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"water"+".jpg")));
                elementoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+"waterface"+".gif")));
            }
            
            nomeLabel.setText(pokemon.getNome());
            pesoLabel.setText("Peso: "+pokemon.getPeso()+"kg");
            alturaLabel.setText("Altura: "+pokemon.getAltura()+"m");
            idadeLabel.setText("Idade: "+Relogio.getDiferencaDias(Relogio.getDataAtual(), pokemon.getNascimento())+" dias");

            Fabrica.criarPokemonDAO().salvar(pokemon);
            
            Som.tocar(getClass().getResource("/pkmn/source/start.wav"));
            

            logField.setText("");
            crapLabel.setVisible(false);
            casaLabel.setVisible(false);
            pokemonLabel.setVisible(true);
            simuladorPanel.setVisible(true);
            statusPanel.setVisible(true);
            elementoLabel.setVisible(true);
            iniciarSimulacao();
            
            novoDialog.dispose();
        }
    }//GEN-LAST:event_nIniciarButtonActionPerformed

    private void jogoMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jogoMenuMouseEntered
        if(pokemonLabel.isVisible())
            continuarMenuItem.setEnabled(false);
        else
            continuarMenuItem.setEnabled(Fabrica.criarPokemonDAO().verificar());
    }//GEN-LAST:event_jogoMenuMouseEntered

    private void nNomeFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nNomeFieldKeyReleased
        if(nNomeField.getText().length() > 10)
            nNomeField.setText(nNomeField.getText().substring(0, 10));
        
        if((nNomeField.getText().compareTo("") != 0)&&((nGrassLabel.isEnabled())||(nFireLabel.isEnabled())||(nWaterLabel.isEnabled()))&&(nNomeField.getText().length() <= 10))
            nIniciarButton.setEnabled(true);
        else
            nIniciarButton.setEnabled(false);
    }//GEN-LAST:event_nNomeFieldKeyReleased

    private static void setVelocidade(int v){
        if(v > 10000)
            velocidade = 10000;
        else if(v > 0)
            velocidade = v;
        else
            velocidade = 1;
    }
    
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        javax.swing.UIManager.put("ProgressBar.selectionBackground", java.awt.Color.gray);
        javax.swing.UIManager.put("ProgressBar.selectionForeground", java.awt.Color.white);
        
        javax.swing.UIManager.put("ToolTip.background", java.awt.Color.white);
        javax.swing.UIManager.put("ToolTip.foreground", java.awt.Color.gray);  
        javax.swing.UIManager.put("ToolTip.border",javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

       
        //</editor-fold>

        if(args.length == 1)
            setVelocidade(Integer.valueOf(args[0]));
        else
            setVelocidade(2500);
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
      
    public final void exibirEmoticon(final String emoticon){
        new Thread(){
            @Override
            public void run(){       
                controle(false);

                emoticonLabel.setLocation(pokemonLabel.getX()-10, pokemonLabel.getY()-25);
                emoticonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+emoticon+".gif")));
                emoticonLabel.setVisible(true);
                
                try {
                    sleep(1500);
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
                
                emoticonLabel.setVisible(false);
                if(!casaLabel.isVisible())
                    controle(true);

            }
        }.start();
    }
    
    public final void escreverLog(final String conteudo){
        logField.setText("(" + Relogio.getHoraAtual() + ") " + conteudo + "\n");
    }
    
    public final void exibirConversa(){        
        exibirEmoticon("status");

        if(pokemon instanceof PokemonGrama)
            Som.tocar(getClass().getResource("/pkmn/source/grass.wav"));
        else if(pokemon instanceof PokemonFogo)
            Som.tocar(getClass().getResource("/pkmn/source/fire.wav"));
        else
            Som.tocar(getClass().getResource("/pkmn/source/water.wav"));

        escreverLog(pokemon.getNome() + ": \"" + pokemon.conversar() +"\"");
    }
    
    public final void exibirCasa(final int tipo){
        new Thread(){
            @Override
            public void run(){
                
                
                controle(false);
                
                if(tipo == 1) casaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/casa.png")));
                else if(tipo == 2) casaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/banho.png")));
                
                if((casaLabel.getY() < pokemonLabel.getY())){
                    casaLabel.setLocation(pokemonLabel.getX(),0-casaLabel.getHeight());
                    casaLabel.setVisible(true);

                    while(casaLabel.getY() < pokemonLabel.getY()){
                        casaLabel.setLocation(casaLabel.getX(), casaLabel.getY()+1);
                        try {
                            sleep(10);
                        } catch (InterruptedException ex) {
                            ex.printStackTrace();
                        }
                    }
                }
                
                if(tipo == 1){
                    Som.tocar(getClass().getResource("/pkmn/source/casa.wav")); 
                    escreverLog(pokemon.getNome() + " dormiu.");
                    pokemon.setCasa(1);
                    pokemonLabel.setVisible(false);
                    while(pokemon.getEnergia() < 99){
                        pokemon.setEnergia(pokemon.getEnergia() + (0.0005*velocidade));
                        try {
                            sleep(100);
                        } catch (InterruptedException ex) {
                            ex.printStackTrace();
                        }
                    }
                    pokemonLabel.setVisible(true);
                    pokemon.setCasa(0);
                    escreverLog(pokemon.getNome() + " acordou.");
                }
                else if(tipo == 2){
                    Som.tocar(getClass().getResource("/pkmn/source/banho.wav")); 
                    escreverLog(pokemon.getNome() + " foi para o banho.");
                    pokemon.setCasa(2);
                    while(pokemon.getHigiene() < 99){
                        pokemon.setHigiene(pokemon.getHigiene() + (0.001*velocidade));
                        try {
                            sleep(100);
                        } catch (InterruptedException ex) {
                            ex.printStackTrace();
                        }
                    }                  
                    pokemon.setCasa(0);
                    escreverLog(pokemon.getNome() + " saiu do banho.");
                }
                
                
                while(casaLabel.getY() >= 0-casaLabel.getHeight()){
                    casaLabel.setLocation(casaLabel.getX(), casaLabel.getY()-1);
                    try {
                        sleep(10);
                    } catch (InterruptedException ex) {
                        ex.printStackTrace();
                    }  
                }

                casaLabel.setVisible(false);
                controle(true);
        

                
                
            }
        }.start();        
    }
    
    public final void iniciarJokenpo(final int p1, final int p2){
        new Thread(){
            @Override
            public void run(){       
                diversaoPanel.setVisible(false);
                
                String[] s = new String[] {"pedra","papel","tesoura"};
                
                p1Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+s[p1]+".png")));
                p2Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkmn/source/"+s[p2]+".png")));
                exibirEmoticon(s[p2]);
                
                switch (Jokenpo.compararMaos(p1, p2)){
                    case 0: p1Label.setEnabled(true); p2Label.setEnabled(true); escreverLog("Empate. " + pokemon.getNome() + " se divertiu."); Som.tocar(getClass().getResource("/pkmn/source/empate.wav")); break;
                    case 1: p1Label.setEnabled(true); p2Label.setEnabled(false); escreverLog("Você venceu! " + pokemon.getNome() + " se divertiu."); Som.tocar(getClass().getResource("/pkmn/source/sucesso.wav")); break;
                    case 2: p1Label.setEnabled(false); p2Label.setEnabled(true); escreverLog(pokemon.getNome() + " venceu. " + pokemon.getNome() + " se divertiu."); Som.tocar(getClass().getResource("/pkmn/source/falha.wav")); break;
                }
                        
                resultadoPanel.setVisible(true);
                                
                pokemon.setDiversao(pokemon.getDiversao()+10);
                
                try {
                    sleep(1500);
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
                
                resultadoPanel.setVisible(false);

            }
        }.start();
    }
    
    
    
    public final void iniciarMorte(final int motivo){
        new Thread(){
            @Override
            public void run(){      
                
                exibirEmoticon("morte");
                Som.tocar(getClass().getResource("/pkmn/source/morte.wav"));
                
                try {
                    sleep(1500);
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
                
                if(motivo == 0) escreverLog(pokemon.getNome() + " morreu de fome.");
                else if(motivo == 1) escreverLog(pokemon.getNome() + " morreu de sono.");
                else if(motivo == 2) escreverLog(pokemon.getNome() + " morreu infectado.");
                else if(motivo == 3) escreverLog(pokemon.getNome() + " morreu de tédio.");
                else if(motivo == 4) escreverLog(pokemon.getNome() + " morreu de solidão.");

                setVelocidade(0);
                Fabrica.criarPokemonDAO().limpar();
                pokemonLabel.setVisible(false);
                simuladorPanel.setVisible(false);
                elementoLabel.setVisible(false);


            }
        }.start();
    }
    
    public final void controle(boolean status){
        controlePanel.setVisible(status);
        diversaoPanel.setVisible(false);
    }
    
    public final void atualizarStatus(){
        fomeBar.setValue((int) Math.ceil(pokemon.getFome()));
        energiaBar.setValue((int) Math.ceil(pokemon.getEnergia()));
        higieneBar.setValue((int) Math.ceil(pokemon.getHigiene()));
        diversaoBar.setValue((int) Math.ceil(pokemon.getDiversao()));
        socialBar.setValue((int) Math.ceil(pokemon.getSocial()));
        banheiroBar.setValue((int) Math.ceil(pokemon.getBanheiro()));
    }
    
    public final void iniciarSimulacao(){
        thread = true;
        
        new Thread(){
            @Override
            public void run(){
                while(thread){                    
                    atualizarStatus();
                    
                    if((pokemon.getBanheiro() < 10)&&((int)(2*Math.random()) == 1)){
                        exibirEmoticon("dotdotdot");
                        Som.tocar(getClass().getResource("/pkmn/source/oops.wav"));
                        crapLabel.setVisible(true);
                        pokemon.setBanheiro(100);
                        pokemon.setStatus(1);
                    }
                    
                    if(pokemon.getFome() == 0){ iniciarMorte(0); thread = false; }
                    if(pokemon.getEnergia() == 0) { iniciarMorte(1); thread = false; }
                    if(pokemon.getHigiene() == 0) { iniciarMorte(2); thread = false; }
                    if(pokemon.getDiversao() == 0) { iniciarMorte(3); thread = false; }
                    if(pokemon.getSocial() == 0) { iniciarMorte(4); thread = false; }
                    
                    pokemon.simular(velocidade);

                    relogioLabel.setText(String.valueOf(Relogio.getHoraAtual()));
                                                            
                    try {
                        sleep(100);
                    } catch (InterruptedException ex) {
                        ex.printStackTrace();
                    }
                }
            }
        
        }.start();
        
    }
    
    private boolean thread;
    private static int velocidade;
    private Pokemon pokemon;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog aboutDialog;
    private javax.swing.JMenu ajudaMenu;
    private javax.swing.JLabel alturaLabel;
    private javax.swing.JProgressBar banheiroBar;
    private javax.swing.JLabel bgLabel;
    private javax.swing.JLabel casaLabel;
    private javax.swing.JMenuItem continuarMenuItem;
    private javax.swing.JPanel controlePanel;
    private javax.swing.JLabel crapLabel;
    private javax.swing.JProgressBar diversaoBar;
    private javax.swing.JPanel diversaoPanel;
    private javax.swing.JLabel elementoLabel;
    private javax.swing.JLabel emoticonLabel;
    private javax.swing.JProgressBar energiaBar;
    private javax.swing.JProgressBar fomeBar;
    private javax.swing.JProgressBar higieneBar;
    private javax.swing.JLabel idadeLabel;
    private javax.swing.JMenu jogoMenu;
    private javax.swing.JTextField logField;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel nCriaturaLabel;
    private javax.swing.JLabel nFireLabel;
    private javax.swing.JLabel nGrassLabel;
    private javax.swing.JButton nIniciarButton;
    private javax.swing.JTextField nNomeField;
    private javax.swing.JTextArea nPokedexText;
    private javax.swing.JLabel nWaterLabel;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JDialog novoDialog;
    private javax.swing.JLabel novoDialogLabel;
    private javax.swing.JPanel novoDialogPanel;
    private javax.swing.JMenuItem novoMenuItem;
    private javax.swing.JLabel p1Label;
    private javax.swing.JLabel p2Label;
    private javax.swing.JLabel paperLabel;
    private javax.swing.JLabel pesoLabel;
    private javax.swing.JLabel pokemonLabel;
    private javax.swing.JLabel relogioLabel;
    private javax.swing.JPanel resultadoPanel;
    private javax.swing.JLabel rockLabel;
    private javax.swing.JMenuItem sairMenuItem;
    private javax.swing.JLabel scissorsLabel;
    private javax.swing.JPopupMenu.Separator separadorMenuBar;
    private javax.swing.JPanel simuladorPanel;
    private javax.swing.JMenuItem sobreMenuItem;
    private javax.swing.JProgressBar socialBar;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables
}
